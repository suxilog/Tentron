# Generated by Django 4.1.9 on 2023-05-29 13:26

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('wagtailcore', '0083_workflowcontenttype'),
        ('organization', '0004_remove_organization_members_organizationmembership'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='organizationrootpage',
            name='organization',
        ),
        migrations.AddField(
            model_name='organization',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='organization',
            name='deleted_at',
            field=models.DateTimeField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='organization',
            name='site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailcore.site'),
        ),
        migrations.AddField(
            model_name='organizationrootpage',
            name='breadcrumb_background',
            field=models.ForeignKey(blank=True, help_text='The background image for the breadcrumb section.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='organizationrootpage',
            name='repeat_in_subnav',
            field=models.BooleanField(default=False, help_text="If checked, a link to this page will be repeated alongside it's direct children when displaying a sub-navigation for this page.", verbose_name='repeat in sub-navigation'),
        ),
        migrations.AddField(
            model_name='organizationrootpage',
            name='repeated_item_text',
            field=models.CharField(blank=True, help_text="e.g. 'Section home' or 'Overview'. If left blank, the page title will be used.", max_length=255, verbose_name='repeated item link text'),
        ),
        migrations.AddField(
            model_name='organizationrootpage',
            name='site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailcore.site'),
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(blank=True, help_text='The name of the site.', max_length=255, null=True)),
                ('site_description', models.CharField(blank=True, help_text='The description of the site.', max_length=255, null=True)),
                ('template_folder', models.CharField(choices=[('default', 'Default'), ('site1', 'Site 1'), ('capatel', 'Capatel')], default='default', max_length=50)),
                ('copy_right', models.CharField(blank=True, help_text='The copy right of the site.', max_length=255, null=True)),
                ('inquiry_mode', models.BooleanField(default=True, help_text='Inquiry Mode, if True, the add to cart button will be hidden.')),
                ('google_analytics', models.CharField(blank=True, help_text='The Google Analytics ID of the site.', max_length=255, null=True)),
                ('google_tag_manager_id', models.CharField(blank=True, help_text='The Google Tag Manager ID of the site, only GTM-XXXXXX.', max_length=255, null=True)),
                ('facebook_pixel', models.CharField(blank=True, help_text='The Facebook Pixel ID of the site.', max_length=255, null=True)),
                ('google_recaptcha_site_key', models.CharField(blank=True, help_text='The Google reCAPTCHA site key of the site.', max_length=255, null=True)),
                ('google_recaptcha_secret_key', models.CharField(blank=True, help_text='The Google reCAPTCHA secret key of the site.', max_length=255, null=True)),
                ('default_meta_title', models.CharField(blank=True, help_text='The default meta title of the site.', max_length=255, null=True)),
                ('default_meta_description', models.CharField(blank=True, help_text='The default meta description of the site.', max_length=255, null=True)),
                ('default_meta_keywords', models.CharField(blank=True, help_text='The default meta keywords of the site.', max_length=255, null=True)),
                ('sitemap_active', models.BooleanField(default=False)),
                ('robots_txt', models.TextField(blank=True, help_text='The robots.txt of the site.', null=True)),
                ('custom_js', models.TextField(blank=True, help_text='The custom JavaScript of the site.', null=True)),
                ('custom_css', models.TextField(blank=True, help_text='The custom CSS of the site.', null=True)),
                ('google_maps_api_key', models.CharField(blank=True, help_text='The Google Maps API key of the site.', max_length=255, null=True)),
                ('contact_content', wagtail.fields.StreamField([('contact_content', wagtail.blocks.StructBlock([('icon', wagtail.blocks.CharBlock(default='fa fa-envelope', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.blocks.CharBlock(required=True)), ('description', wagtail.blocks.RichTextBlock(required=False))]))], blank=True, help_text='The contact content of the site.', null=True, use_json_field=True)),
                ('social_media', wagtail.fields.StreamField([('social_media', wagtail.blocks.StructBlock([('icon', wagtail.blocks.CharBlock(default='fa fa-envelope', help_text='The icon of the social media. Find more icons at <a target="_blank" href="https://fontawesome.com/v5/search">https://fontawesome.com/v5/search</a>', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.blocks.CharBlock(required=True)), ('description', wagtail.blocks.RichTextBlock(required=False)), ('link', wagtail.blocks.URLBlock(required=True))]))], blank=True, help_text='The social media of the site.', null=True, use_json_field=True)),
                ('default_social_image', models.ForeignKey(blank=True, help_text='The default social image of the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
                ('site_logo', models.ForeignKey(blank=True, help_text='The logo of the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Site setting',
                'verbose_name_plural': 'Site settings',
            },
        ),
        migrations.CreateModel(
            name='ExtendedSite',
            fields=[
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wagtailcore.site')),
                ('template_folder', models.CharField(choices=[('default', 'Default'), ('site1', 'Site 1'), ('capatel', 'Capatel')], default='default', max_length=50)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
            ],
            options={
                'verbose_name': 'Site setting',
                'verbose_name_plural': 'Site settings',
            },
        ),
    ]
