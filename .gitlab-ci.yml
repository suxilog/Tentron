image: docker:latest


services:
  - docker:dind


stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2


before_script:
  - echo "Before script section"
  - echo 'CI_DEFAULT_BRANCH'
  - echo $CI_DEFAULT_BRANCH
  - echo $HOST_USER_ID
  - echo $HOST_GROUP_ID
  - echo $CELERY_USER_ID
  - echo $DOCKER_GROUP_ID


build_backend_app:
  only:
    - master
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" $CI_REGISTRY

  script:

    - docker build -f ./Dockerfile --build-arg HOST_USER_ID=$HOST_USER_ID --build-arg HOST_GROUP_ID=$HOST_GROUP_ID --build-arg CELERY_USER_ID=$CELERY_USER_ID --build-arg DOCKER_GROUP_ID=$DOCKER_GROUP_ID -t "$CI_REGISTRY_IMAGE/backend_app:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE/backend_app:$CI_COMMIT_REF_SLUG"


build_prod_nginx:
  only:
    - master
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" $CI_REGISTRY

  script:
    - docker build -f ./nginx/Dockerfile -t "$CI_REGISTRY_IMAGE/tentron_nginx:$CI_COMMIT_REF_SLUG" ./nginx
    - docker push "$CI_REGISTRY_IMAGE/tentron_nginx:$CI_COMMIT_REF_SLUG"



# run_tests:
#   stage: test
#   before_script:
#     # - openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./nginx/self-signed-ssl/nginx-selfsigned.key -out ./nginx/self-signed-ssl/nginx-selfsigned.crt -subj "/C=US/ST=Oregon/L=Portland/O=Company Name/OU=Org/CN=example.com"

#     - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" $CI_REGISTRY

#   script:
#     - docker pull $CI_REGISTRY_IMAGE/backend_app:$CI_COMMIT_REF_SLUG
#     - docker tag $CI_REGISTRY_IMAGE/backend_app:$CI_COMMIT_REF_SLUG tentron-backend_app:latest
#     - docker compose --compatibility -f docker-compose.dev.yml up -d
#     - echo "Start test"
#     - docker compose -f docker-compose.dev.yml exec -T backend_app python manage.py test
#     - echo "Test pass"
#     - docker compose -f docker-compose.dev.yml down
#   tags:
#     - postgres
#     - docker

deploy:
  stage: deploy
  only:
    - master
  when: on_success
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan 54.153.61.161 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts


  script:
    - set -e
    - ssh admin@54.153.61.161 mkdir -p /home/admin/tentron /home/admin/tentron/DBbackup /home/admin/tentron/logs/cron /home/admin/tentron/certbot/
    - ssh admin@54.153.61.161 touch /home/admin/tentron/.env.prod
    - scp docker-compose.yml admin@54.153.61.161:/home/admin/tentron
    - scp ./certbot/init-letsencrypt.sh admin@54.153.61.161:/home/admin/tentron/certbot
    - scp ./.env.prod admin@54.153.61.161:/home/admin/tentron
    - >-
      ssh admin@54.153.61.161 "
      docker login -u gitlab-ci-token -p \"$CI_JOB_TOKEN\" $CI_REGISTRY &&
      docker pull "$CI_REGISTRY_IMAGE/backend_app:$CI_COMMIT_REF_SLUG" &&
      docker tag "$CI_REGISTRY_IMAGE/backend_app:$CI_COMMIT_REF_SLUG" tentron-backend_app:latest &&
      docker pull "$CI_REGISTRY_IMAGE/tentron_nginx:$CI_COMMIT_REF_SLUG" &&
      docker tag "$CI_REGISTRY_IMAGE/tentron_nginx:$CI_COMMIT_REF_SLUG" tentron-tentron_nginx:latest &&

      cd /home/admin/tentron &&
      docker compose -f docker-compose.yml down &&
      docker compose -f docker-compose.yml up -d"
